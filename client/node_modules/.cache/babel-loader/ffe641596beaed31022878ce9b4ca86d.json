{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\rocks-and-logs\\\\src\\\\Workers\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'site',\n  label: 'Site',\n  minWidth: 100\n}, {\n  id: 'phoneNo',\n  label: 'Phone No',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'type',\n  label: 'Type',\n  minWidth: 170,\n  align: 'right'\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function WTable({\n  workers\n}) {\n  _s();\n\n  // const [workers, setWorkers] = useState([])\n  // useEffect(() => {\n  //     axios.get(\"http://localhost:5000/users/\")\n  //         .then(res => {setWorkers(res.data)})\n  //         .catch(err => {console.log(err)})\n  // }, [])\n  function createData(worker) {\n    let Name = worker.name;\n    let Site = worker.site;\n    let phone = worker.phoneNo;\n    let Type = worker.type;\n    return {\n      Name,\n      Site,\n      phone,\n      Type\n    };\n  } // const rows = [\n  //   {\n  //       workers.map(worker => (createData(worker)))\n  //     }\n  // ];\n\n\n  const [rows, setRows] = useState([]);\n  workers.map(worker => {\n    const data = {\n      Name: worker.name,\n      Site: worker.site,\n      phone: worker.phoneNo,\n      Type: worker.type\n    };\n    return setRows([...rows, data]);\n  });\n  console.log(rows);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WTable, \"QEPnFc8S0h/vxbSmOJvQ5QWfLDk=\", false, function () {\n  return [useStyles];\n});\n\n_c = WTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"WTable\");","map":{"version":3,"sources":["C:/Users/aditi/rocks-and-logs/src/Workers/Table.js"],"names":["React","useState","useEffect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","columns","id","label","minWidth","align","useStyles","root","width","container","maxHeight","WTable","workers","createData","worker","Name","name","Site","site","phone","phoneNo","Type","type","rows","setRows","map","data","console","log","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","column","slice","row","format","code","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport axios from 'axios';\r\n\r\nconst columns = [\r\n  { \r\n      id: 'name', \r\n      label: 'Name', \r\n      minWidth: 170 \r\n  },\r\n  { \r\n      id: 'site', \r\n      label: 'Site', \r\n      minWidth: 100 \r\n  },\r\n  {\r\n    id: 'phoneNo',\r\n    label: 'Phone No',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'type',\r\n    label: 'Type',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function WTable({workers}) {\r\n\r\n\r\n  // const [workers, setWorkers] = useState([])\r\n\r\n\r\n  // useEffect(() => {\r\n      \r\n  //     axios.get(\"http://localhost:5000/users/\")\r\n  //         .then(res => {setWorkers(res.data)})\r\n  //         .catch(err => {console.log(err)})\r\n          \r\n  // }, [])\r\n\r\n    function createData(worker) {\r\n        let Name = worker.name;\r\n        let Site = worker.site;\r\n        let phone = worker.phoneNo;\r\n        let Type = worker.type;\r\n      return { Name, Site, phone, Type };\r\n    }\r\n    \r\n    // const rows = [\r\n    //   {\r\n    //       workers.map(worker => (createData(worker)))\r\n    //     }\r\n    // ];\r\n\r\n    const [rows, setRows] = useState([]);\r\n\r\n\r\n    workers.map(worker => {\r\n      const data = {\r\n        Name : worker.name,\r\n        Site : worker.site,\r\n        phone : worker.phoneNo,\r\n        Type : worker.type,\r\n      }\r\n      return setRows([...rows, data])\r\n    })\r\n\r\n    console.log(rows);\r\n\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}