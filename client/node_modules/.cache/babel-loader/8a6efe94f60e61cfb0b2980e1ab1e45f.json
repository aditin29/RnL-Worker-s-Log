{"ast":null,"code":"import axios from 'axios';\nimport { ADMIN_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //import api from '../utils/api'\n//load admin\n\nexport const loadAdmin = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token); //console.log(\"token: \", localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/auth/\");\n    console.log(res.data);\n    dispatch({\n      type: ADMIN_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //login admin\n\nexport const login = (Name, Password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = {\n    Name,\n    Password\n  }; //console.log(body);\n\n  try {\n    const res = await axios.post(\"/auth/adminLogin\", body, config); //console.log(res.data);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadAdmin());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    let errMsg = '';\n    errors.forEach(error => errMsg = error.msg);\n    dispatch({\n      type: LOGIN_FAIL,\n      errMsg: errMsg\n    });\n  }\n}; //logout\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/aditi/rocks-and-logs/client/src/actions/auth.js"],"names":["axios","ADMIN_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","setAuthToken","loadAdmin","dispatch","localStorage","token","res","get","console","log","data","type","payload","err","login","Name","Password","config","headers","body","post","errors","response","errMsg","forEach","error","msg","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,aAA/C,EAA8DC,MAA9D,QAA4E,SAA5E;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CACA;AAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7C,MAAGC,YAAY,CAACC,KAAhB,EAAuB;AACnBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ,CADmB,CAEnB;AACH;;AAED,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,QAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEf,YADD;AAELgB,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAMG,GAAN,EAAW;AACTV,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH;AACJ,CAlBM,C,CAoBP;;AACA,OAAO,MAAMiB,KAAK,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB,MAAMb,QAAN,IAAkB;AACvD,QAAMc,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAOA,QAAMC,IAAI,GAAG;AAACJ,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAb,CARuD,CASvD;;AAEA,MAAI;AACA,UAAMV,GAAG,GAAG,MAAMX,KAAK,CAACyB,IAAN,CAAW,kBAAX,EAA+BD,IAA/B,EAAqCF,MAArC,CAAlB,CADA,CAEA;;AACAd,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEZ,aADD;AAELa,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAP,IAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AAEH,GAVD,CAUE,OAAMW,GAAN,EAAW;AACT,UAAMQ,MAAM,GAAGR,GAAG,CAACS,QAAJ,CAAaZ,IAAb,CAAkBW,MAAjC;AACA,QAAIE,MAAM,GAAG,EAAb;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAeC,KAAK,IAAIF,MAAM,GAAIE,KAAK,CAACC,GAAxC;AACAvB,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEb,UADD;AAELyB,MAAAA,MAAM,EAAEA;AAFH,KAAD,CAAR;AAIH;AAGJ,CAhCM,C,CAmCP;;AACA,OAAO,MAAMI,MAAM,GAAG,MAAMxB,QAAQ,IAAI;AACpCA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import axios from 'axios';\r\nimport { ADMIN_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n//import api from '../utils/api'\r\n\r\n//load admin\r\nexport const loadAdmin = () => async dispatch => {\r\n    if(localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n        //console.log(\"token: \", localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get(\"/auth/\");\r\n        console.log(res.data)\r\n        dispatch({\r\n            type: ADMIN_LOADED,\r\n            payload: res.data\r\n        })\r\n    } catch(err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n} \r\n\r\n//login admin\r\nexport const login = (Name, Password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n  \r\n\r\n    const body = {Name, Password};\r\n    //console.log(body);\r\n\r\n    try {\r\n        const res = await axios.post(\"/auth/adminLogin\", body, config);\r\n        //console.log(res.data);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        \r\n        dispatch(loadAdmin());\r\n        \r\n    } catch(err) {\r\n        const errors = err.response.data.errors;\r\n        let errMsg = '';\r\n        errors.forEach(error => errMsg = (error.msg));\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            errMsg: errMsg\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n//logout\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}