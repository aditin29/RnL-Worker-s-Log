{"ast":null,"code":"import axios from 'axios';\nimport { ADMIN_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //import api from '../utils/api'\n//load admin\n\nexport const loadAdmin = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"http://localhost:5000/auth\");\n    dispatch({\n      type: ADMIN_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //login admin\n\nexport const login = (Name, Password) => async dispatch => {\n  // const config = {\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     }\n  // };\n  const body = JSON.stringify({\n    Name,\n    Password\n  });\n  console.log(body);\n\n  try {\n    const res = await axios.post(\"http://localhost:5000/auth/adminLogin\", body);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadAdmin());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    let errMsg = '';\n    errors.forEach(error => errMsg = error.msg);\n    dispatch({\n      type: LOGIN_FAIL,\n      errMsg: errMsg\n    });\n  }\n}; //logout\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/aditi/rocks-and-logs/client/src/actions/auth.js"],"names":["axios","ADMIN_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","setAuthToken","loadAdmin","dispatch","localStorage","token","res","get","type","payload","data","err","login","Name","Password","body","JSON","stringify","console","log","post","errors","response","errMsg","forEach","error","msg","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,aAA/C,EAA8DC,MAA9D,QAA4E,SAA5E;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CACA;AAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7C,MAAGC,YAAY,CAACC,KAAhB,EAAuB;AACnBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACH;;AAED,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,4BAAV,CAAlB;AAEAJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEZ,YADD;AAELa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAMC,GAAN,EAAW;AACTR,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAGH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMe,KAAK,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB,MAAMX,QAAN,IAAkB;AACvD;AACA;AACA;AACA;AACA;AAIA,QAAMY,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACJ,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAf,CAAb;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,MAAI;AACA,UAAMT,GAAG,GAAG,MAAMX,KAAK,CAACyB,IAAN,CAAW,uCAAX,EAAoDL,IAApD,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAET,aADD;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAP,IAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AAEH,GATD,CASE,OAAMS,GAAN,EAAW;AACT,UAAMU,MAAM,GAAGV,GAAG,CAACW,QAAJ,CAAaZ,IAAb,CAAkBW,MAAjC;AACA,QAAIE,MAAM,GAAG,EAAb;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAeC,KAAK,IAAIF,MAAM,GAAIE,KAAK,CAACC,GAAxC;AACAvB,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEV,UADD;AAELyB,MAAAA,MAAM,EAAEA;AAFH,KAAD,CAAR;AAIH;AAGJ,CAhCM,C,CAmCP;;AACA,OAAO,MAAMI,MAAM,GAAG,MAAMxB,QAAQ,IAAI;AACpCA,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import axios from 'axios';\r\nimport { ADMIN_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n//import api from '../utils/api'\r\n\r\n//load admin\r\nexport const loadAdmin = () => async dispatch => {\r\n    if(localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get(\"http://localhost:5000/auth\");\r\n\r\n        dispatch({\r\n            type: ADMIN_LOADED,\r\n            payload: res.data\r\n        })\r\n    } catch(err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n} \r\n\r\n//login admin\r\nexport const login = (Name, Password) => async dispatch => {\r\n    // const config = {\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json'\r\n    //     }\r\n    // };\r\n\r\n    \r\n\r\n    const body = JSON.stringify({Name, Password});\r\n    console.log(body);\r\n\r\n    try {\r\n        const res = await axios.post(\"http://localhost:5000/auth/adminLogin\", body);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        \r\n        dispatch(loadAdmin());\r\n        \r\n    } catch(err) {\r\n        const errors = err.response.data.errors;\r\n        let errMsg = '';\r\n        errors.forEach(error => errMsg = (error.msg));\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            errMsg: errMsg\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n//logout\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}