{"ast":null,"code":"import axios from 'axios';\nimport { ADMIN_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //load admin\n\nexport const loadAdmin = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('http://localhost:5000/auth');\n    dispatch({\n      type: ADMIN_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //login admin\n\nexport const login = (Name, Password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    Name,\n    Password\n  });\n\n  try {\n    const res = await axios.post('http://localhost:5000/auth/adminLogin', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadAdmin());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    errors.forEach(error => console.log(error.msg));\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/aditi/rocks-and-logs/src/actions/auth.js"],"names":["axios","ADMIN_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","setAuthToken","loadAdmin","dispatch","localStorage","token","res","get","type","payload","data","err","login","Name","Password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","console","log","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,aAA/C,QAAoE,SAApE;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7C,MAAGC,YAAY,CAACC,KAAhB,EAAuB;AACnBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACH;;AAED,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,4BAAV,CAAlB;AAEAJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEX,YADD;AAELY,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAMC,GAAN,EAAW;AACTR,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMc,KAAK,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB,MAAMX,QAAN,IAAkB;AACvD,QAAMY,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CACT;AAACN,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GADS,CAAb;;AAIA,MAAI;AACA,UAAMR,GAAG,GAAG,MAAMV,KAAK,CAACwB,IAAN,CAAW,uCAAX,EAAoDH,IAApD,EAA0DF,MAA1D,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAER,aADD;AAELS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAP,IAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AAEH,GATD,CASE,OAAMS,GAAN,EAAW;AACT,UAAMU,MAAM,GAAGV,GAAG,CAACW,QAAJ,CAAaZ,IAAb,CAAkBW,MAAjC;AACAA,IAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAlB,CAAxB;AACAxB,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAGH;AAGJ,CA7BM","sourcesContent":["import axios from 'axios';\r\nimport { ADMIN_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS } from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//load admin\r\nexport const loadAdmin = () => async dispatch => {\r\n    if(localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/auth');\r\n\r\n        dispatch({\r\n            type: ADMIN_LOADED,\r\n            payload: res.data\r\n        })\r\n    } catch(err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n} \r\n\r\n//login admin\r\nexport const login = (Name, Password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify(\r\n        {Name, Password}\r\n    );\r\n\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/auth/adminLogin', body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        \r\n        dispatch(loadAdmin());\r\n        \r\n    } catch(err) {\r\n        const errors = err.response.data.errors;\r\n        errors.forEach(error => console.log(error.msg));\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}