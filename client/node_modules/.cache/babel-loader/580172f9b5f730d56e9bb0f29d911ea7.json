{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\rocks-and-logs\\\\src\\\\Workers\\\\WorkersTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './WorkersColumn';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkersTable() {\n  _s();\n\n  const [workers, setWorkers] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users/\").then(res => {\n      setWorkers(res.data);\n    }).catch(err => {\n      console.log(err);\n    }); // console.log(workers);\n  }, []);\n  console.log(workers); // const columns = useMemo(() => COLUMNS, []);\n  // const workersData = useMemo(() => workers, [workers]);\n  // const tableInstance = useTable({\n  //     columns,\n  //     workersData \n  // });\n  // const {\n  //     getTableProps,\n  //     getTableBodyProps,\n  //     headerGroups,\n  //     rows,\n  //     prepareRow\n  // } = tableInstance;\n\n  return (\n    /*#__PURE__*/\n    // <table {...getTableProps()}>\n    //     <thead>\n    //         {headerGroups.map(headerGroup => (\n    //             <tr {...headerGroup.getHeaderGroupProps()}>\n    //                 {headerGroup.headers.map(column => (\n    //                     <th {...column.getHeaderProps()}> {column.render('Header')} </th>\n    //                 ))}\n    //             </tr>\n    //         ))}\n    //     </thead>\n    //     <tbody {...getTableBodyProps()}>\n    //         {rows.map(row => {\n    //             prepareRow(row);\n    //             return(\n    //                 <tr {...row.getRowProps()}>\n    //                     {row.cells.map(cell => {\n    //                         return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n    //                     })}\n    //                 </tr>\n    //             )\n    //         })}\n    //     </tbody>\n    // </table>\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(WorkersTable, \"8dWHyGGFKocIZErNAr5f9LEm3Qc=\");\n\n_c = WorkersTable;\nexport default WorkersTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkersTable\");","map":{"version":3,"sources":["C:/Users/aditi/rocks-and-logs/src/Workers/WorkersTable.js"],"names":["React","useEffect","useState","useMemo","useTable","COLUMNS","axios","WorkersTable","workers","setWorkers","get","then","res","data","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AAEZK,IAAAA,KAAK,CAACI,GAAN,CAAU,8BAAV,EACKC,IADL,CACUC,GAAG,IAAI;AAACH,MAAAA,UAAU,CAACG,GAAG,CAACC,IAAL,CAAV;AAAuB,KADzC,EAEKC,KAFL,CAEWC,GAAG,IAAI;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAFpC,EAFY,CAMZ;AAEH,GARQ,EAQN,EARM,CAAT;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ,EAhBoB,CAmBpB;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AA9BJ;AAgCH;;GAvEQD,Y;;KAAAA,Y;AAyET,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { useTable } from 'react-table';\r\nimport { COLUMNS } from './WorkersColumn';\r\nimport axios from 'axios';\r\n\r\nfunction WorkersTable() {\r\n\r\n    const [workers, setWorkers] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        axios.get(\"http://localhost:5000/users/\")\r\n            .then(res => {setWorkers(res.data); })\r\n            .catch(err => {console.log(err)});\r\n\r\n        // console.log(workers);\r\n            \r\n    }, [])\r\n\r\n\r\n    console.log(workers);\r\n\r\n    \r\n    // const columns = useMemo(() => COLUMNS, []);\r\n    // const workersData = useMemo(() => workers, [workers]);\r\n\r\n\r\n    // const tableInstance = useTable({\r\n    //     columns,\r\n    //     workersData \r\n    // });\r\n\r\n\r\n    // const {\r\n    //     getTableProps,\r\n    //     getTableBodyProps,\r\n    //     headerGroups,\r\n    //     rows,\r\n    //     prepareRow\r\n    // } = tableInstance;\r\n\r\n\r\n\r\n    return (\r\n        // <table {...getTableProps()}>\r\n        //     <thead>\r\n        //         {headerGroups.map(headerGroup => (\r\n        //             <tr {...headerGroup.getHeaderGroupProps()}>\r\n        //                 {headerGroup.headers.map(column => (\r\n        //                     <th {...column.getHeaderProps()}> {column.render('Header')} </th>\r\n        //                 ))}\r\n                        \r\n        //             </tr>\r\n        //         ))}\r\n                \r\n        //     </thead>\r\n\r\n        //     <tbody {...getTableBodyProps()}>\r\n        //         {rows.map(row => {\r\n        //             prepareRow(row);\r\n        //             return(\r\n        //                 <tr {...row.getRowProps()}>\r\n        //                     {row.cells.map(cell => {\r\n        //                         return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\r\n        //                     })}\r\n                            \r\n        //                 </tr>\r\n        //             )\r\n        //         })}\r\n                \r\n        //     </tbody>\r\n        // </table>\r\n\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default WorkersTable\r\n"]},"metadata":{},"sourceType":"module"}