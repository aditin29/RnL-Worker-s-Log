{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\rocks-and-logs\\\\src\\\\Workers\\\\WorkersTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './WorkersColumn';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkersTable({\n  workers\n}) {\n  _s();\n\n  //const [workers, setWorkers] = useState([]);\n  const [finalWorkers, setFinalWorkers] = useState([]); // useEffect(() => {\n  //     axios.get(\"http://localhost:5000/users/\")\n  //         .then(res => {setWorkers(res.data); })\n  //         .catch(err => {console.log(err)});\n  // }, [])\n\n  workers.map(worker => {\n    const data = {\n      name: worker.name,\n      site: worker.site,\n      phone: worker.phoneNo,\n      type: worker.type\n    };\n    return setFinalWorkers([...finalWorkers], data);\n  });\n  console.log(finalWorkers); //const columns = workers[0] && Object.keys(workers[0]);\n  // const columns = useMemo(() => COLUMNS, []);\n  // const workersData = useMemo(() => workers, [workers]);\n  // //console.log(workersData);\n  // const tableInstance = useTable({\n  //     columns,\n  //     workersData \n  // });\n  // const {\n  //     getTableProps,\n  //     getTableBodyProps,\n  //     headerGroups,\n  //     rows,\n  //     prepareRow\n  // } = tableInstance;\n\n  return (\n    /*#__PURE__*/\n    // <table {...getTableProps()}>\n    //     <thead>\n    //         {headerGroups.map(headerGroup => (\n    //             <tr {...headerGroup.getHeaderGroupProps()}>\n    //                 {headerGroup.headers.map(column => (\n    //                     <th {...column.getHeaderProps()}> {column.render('Header')} </th>\n    //                 ))}\n    //             </tr>\n    //         ))}\n    //     </thead>\n    //     <tbody {...getTableBodyProps()}>\n    //         {rows.map(row => {\n    //             prepareRow(row);\n    //             return(\n    //                 <tr {...row.getRowProps()}>\n    //                     {row.cells.map(cell => {\n    //                         return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n    //                     })}\n    //                 </tr>\n    //             )\n    //         })}\n    //     </tbody>\n    // </table>\n    _jsxDEV(\"div\", {\n      children: \"     Hello  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(WorkersTable, \"4DUxiF2Ep15XyoYHx5EkYUsC4Uk=\");\n\n_c = WorkersTable;\nexport default WorkersTable; //<table cellPadding={0} cellSpacing={0}>\n//            <thead>\n//               <tr>{workers[0] && columns.map(heading => <th>{heading}</th>) }</tr>\n//            </thead>\n//            <tbody>\n//                {workers.map(row => <tr>\n//                    {columns.map(column => <td>{row[column]}</td>)}\n//                </tr>)}\n//            </tbody>\n//        </table>\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkersTable\");","map":{"version":3,"sources":["C:/Users/aditi/rocks-and-logs/src/Workers/WorkersTable.js"],"names":["React","useEffect","useState","useMemo","useTable","COLUMNS","axios","WorkersTable","workers","finalWorkers","setFinalWorkers","map","worker","data","name","site","phone","phoneNo","type","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAiC;AAAA;;AAE7B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD,CAH6B,CAM7B;AAEA;AACA;AACA;AAIA;;AAGAM,EAAAA,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAI;AAClB,UAAMC,IAAI,GAAG;AAACC,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAAd;AAAoBC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IAAjC;AAAuCC,MAAAA,KAAK,EAAEJ,MAAM,CAACK,OAArD;AAA8DC,MAAAA,IAAI,EAAEN,MAAM,CAACM;AAA3E,KAAb;AACA,WAAOR,eAAe,CAAC,CAAC,GAAGD,YAAJ,CAAD,EAAoBI,IAApB,CAAtB;AACH,GAHD;AAKAM,EAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ,EAtB6B,CAyB7B;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BJ;AAkCH;;GApFQF,Y;;KAAAA,Y;AAsFT,eAAeA,YAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { useTable } from 'react-table';\r\nimport { COLUMNS } from './WorkersColumn';\r\nimport axios from 'axios';\r\n\r\nfunction WorkersTable({workers}) {\r\n\r\n    //const [workers, setWorkers] = useState([]);\r\n    const [finalWorkers, setFinalWorkers] = useState([]);\r\n    \r\n\r\n    // useEffect(() => {\r\n        \r\n    //     axios.get(\"http://localhost:5000/users/\")\r\n    //         .then(res => {setWorkers(res.data); })\r\n    //         .catch(err => {console.log(err)});\r\n\r\n        \r\n            \r\n    // }, [])\r\n\r\n\r\n    workers.map(worker => {\r\n        const data = {name: worker.name, site: worker.site, phone: worker.phoneNo, type: worker.type};\r\n        return setFinalWorkers([...finalWorkers], data);\r\n    })\r\n\r\n    console.log(finalWorkers);\r\n\r\n\r\n    //const columns = workers[0] && Object.keys(workers[0]);\r\n    \r\n\r\n    \r\n    // const columns = useMemo(() => COLUMNS, []);\r\n    // const workersData = useMemo(() => workers, [workers]);\r\n\r\n    // //console.log(workersData);\r\n\r\n    // const tableInstance = useTable({\r\n    //     columns,\r\n    //     workersData \r\n    // });\r\n\r\n\r\n    // const {\r\n    //     getTableProps,\r\n    //     getTableBodyProps,\r\n    //     headerGroups,\r\n    //     rows,\r\n    //     prepareRow\r\n    // } = tableInstance;\r\n\r\n\r\n\r\n    return (\r\n        // <table {...getTableProps()}>\r\n        //     <thead>\r\n        //         {headerGroups.map(headerGroup => (\r\n        //             <tr {...headerGroup.getHeaderGroupProps()}>\r\n        //                 {headerGroup.headers.map(column => (\r\n        //                     <th {...column.getHeaderProps()}> {column.render('Header')} </th>\r\n        //                 ))}\r\n                        \r\n        //             </tr>\r\n        //         ))}\r\n                \r\n        //     </thead>\r\n\r\n        //     <tbody {...getTableBodyProps()}>\r\n        //         {rows.map(row => {\r\n        //             prepareRow(row);\r\n        //             return(\r\n        //                 <tr {...row.getRowProps()}>\r\n        //                     {row.cells.map(cell => {\r\n        //                         return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\r\n        //                     })}\r\n                            \r\n        //                 </tr>\r\n        //             )\r\n        //         })}\r\n                \r\n        //     </tbody>\r\n        // </table>\r\n\r\n        <div>     Hello  </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default WorkersTable\r\n\r\n\r\n//<table cellPadding={0} cellSpacing={0}>\r\n//            <thead>\r\n//               <tr>{workers[0] && columns.map(heading => <th>{heading}</th>) }</tr>\r\n//            </thead>\r\n//            <tbody>\r\n//                {workers.map(row => <tr>\r\n//                    {columns.map(column => <td>{row[column]}</td>)}\r\n//                </tr>)}\r\n//            </tbody>\r\n//        </table>\r\n"]},"metadata":{},"sourceType":"module"}