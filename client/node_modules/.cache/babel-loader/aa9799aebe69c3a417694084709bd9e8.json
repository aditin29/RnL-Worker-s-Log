{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\rocks-and-logs\\\\src\\\\PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute({\n  component: Component,\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      return !isAuthenticated && !loading ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 71\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 98\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/aditi/rocks-and-logs/src/PrivateRoute.js"],"names":["React","PropTypes","connect","Route","Redirect","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;;;AAEA,SAASC,YAAT,CAAuB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,IAAI,EAAE;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,GAA7B;AAAyD,KAAGC;AAA5D,CAAvB,EAA0F;AACtF,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAIC,KAAK,IAAI;AAAC,aAAO,CAACH,eAAD,IAAoB,CAACC,OAArB,gBAA+B,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAA/B,gBAA0D,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,cAAjE;AAA2F;AAFnH;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQP,Y;AAWTA,YAAY,CAACQ,SAAb,GAAyB;AACrBL,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBC;AADF,CAAzB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADkB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACc,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nfunction PrivateRoute ({component: Component, auth: {isAuthenticated, loading}, ...rest}) {\r\n    return (\r\n        <Route \r\n            {...rest} \r\n            render = {props => {return !isAuthenticated && !loading ? <Redirect to='/login' /> : <Component {...props} /> }} \r\n\r\n        >\r\n        </Route>\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}