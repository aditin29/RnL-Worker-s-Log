{"ast":null,"code":"import React,{useEffect}from'react';import{BrowserRouter as Router,Switch,Route}from'react-router-dom';import Home from'./Components/Home';import CreateWorker from'./Workers/CreateWorker';import Workers from'./Workers/Workers';import MonthlyReport from'./Workers/MonthlyReport';import Sites from'./Sites/Sites';import Login from'./Components/Login';import PrivateRoute from'./PrivateRoute';import{Provider}from'react-redux';import store from'./store';import setAuthToken from'./utils/setAuthToken';import{loadAdmin}from'./actions/auth';import{LOGOUT}from'./actions/types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){useEffect(function(){if(localStorage.token){setAuthToken(localStorage.token);}store.dispatch(loadAdmin());// log user out from all tabs if they log out in one tab\nwindow.addEventListener('storage',function(){if(!localStorage.token)store.dispatch({type:LOGOUT});});},[]);return/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(PrivateRoute,{path:\"/monthly-report\",exact:true,component:MonthlyReport}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/add-site\",exact:true,component:Sites}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/workers\",exact:true,component:Workers}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/create-worker\",exact:true,component:CreateWorker}),/*#__PURE__*/_jsx(Route,{path:\"/login\",exact:true,component:Login}),/*#__PURE__*/_jsx(PrivateRoute,{exact:true,path:\"/\",component:Home})]})})});}export default App;","map":{"version":3,"sources":["C:/Users/aditi/rocks-and-logs/client/src/App.js"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","Home","CreateWorker","Workers","MonthlyReport","Sites","Login","PrivateRoute","Provider","store","setAuthToken","loadAdmin","LOGOUT","App","localStorage","token","dispatch","window","addEventListener","type"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,kBAAvD,CAEA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,OAAQC,QAAR,KAAuB,aAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,OAASC,SAAT,KAA0B,gBAA1B,CACA,OAASC,MAAT,KAAuB,iBAAvB,C,wFAIA,QAASC,CAAAA,GAAT,EAAe,CAEbjB,SAAS,CAAC,UAAM,CAEd,GAAGkB,YAAY,CAACC,KAAhB,CAAuB,CACrBL,YAAY,CAACI,YAAY,CAACC,KAAd,CAAZ,CACD,CAEDN,KAAK,CAACO,QAAN,CAAeL,SAAS,EAAxB,EAEA;AACAM,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmC,UAAM,CACvC,GAAI,CAACJ,YAAY,CAACC,KAAlB,CAAyBN,KAAK,CAACO,QAAN,CAAe,CAAEG,IAAI,CAAEP,MAAR,CAAf,EAC1B,CAFD,EAGD,CAZQ,CAYN,EAZM,CAAT,CAeA,mBACE,KAAC,QAAD,EAAU,KAAK,CAAEH,KAAjB,uBACE,KAAC,MAAD,wBACE,MAAC,MAAD,yBACE,KAAC,YAAD,EAAc,IAAI,CAAC,iBAAnB,CAAqC,KAAK,KAA1C,CAA2C,SAAS,CAAEL,aAAtD,EADF,cAEE,KAAC,YAAD,EAAc,IAAI,CAAC,WAAnB,CAA+B,KAAK,KAApC,CAAqC,SAAS,CAAEC,KAAhD,EAFF,cAGE,KAAC,YAAD,EAAc,IAAI,CAAC,UAAnB,CAA8B,KAAK,KAAnC,CAAoC,SAAS,CAAEF,OAA/C,EAHF,cAIE,KAAC,YAAD,EAAc,IAAI,CAAC,gBAAnB,CAAoC,KAAK,KAAzC,CAA0C,SAAS,CAAED,YAArD,EAJF,cAKE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,KAA1B,CAA2B,SAAS,CAAEI,KAAtC,EALF,cAOE,KAAC,YAAD,EAAc,KAAK,KAAnB,CAAoB,IAAI,CAAC,GAAzB,CAA6B,SAAS,CAAEL,IAAxC,EAPF,GADF,EADF,EADF,CAgBD,CAED,cAAeY,CAAAA,GAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './Components/Home';\nimport CreateWorker from './Workers/CreateWorker';\nimport Workers from './Workers/Workers';\nimport MonthlyReport from './Workers/MonthlyReport';\nimport Sites from './Sites/Sites';\nimport Login from './Components/Login';\n\nimport PrivateRoute from './PrivateRoute';\n\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken';\nimport { loadAdmin } from './actions/auth';\nimport { LOGOUT } from './actions/types';\n\n\n\nfunction App() {\n\n  useEffect(() => {\n    \n    if(localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    store.dispatch(loadAdmin());\n\n    // log user out from all tabs if they log out in one tab\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n  }, [])\n\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <PrivateRoute path='/monthly-report' exact component={MonthlyReport} />\n          <PrivateRoute path='/add-site' exact component={Sites} />\n          <PrivateRoute path='/workers' exact component={Workers} />\n          <PrivateRoute path='/create-worker' exact component={CreateWorker} />\n          <Route path='/login' exact component={Login} />\n\n          <PrivateRoute exact path='/' component={Home} />\n\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}