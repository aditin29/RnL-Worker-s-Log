{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\rocks-and-logs\\\\src\\\\Workers\\\\WorkersTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './WorkersColumn';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkersTable() {\n  _s();\n\n  const [workers, setWorkers] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users/\").then(res => {\n      setWorkers(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const columns = useMemo(() => COLUMNS, []);\n  const workersData = useMemo(() => workers, [workers]);\n  const tableInstance = useTable({\n    columns,\n    workersData\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: [\" \", column.render('Header'), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: [\" \", cell.render('Cell'), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this) //<div></div>\n  ;\n}\n\n_s(WorkersTable, \"oD1vS7ytu+NfB3/602AGORRKDQQ=\", false, function () {\n  return [useTable];\n});\n\n_c = WorkersTable;\nexport default WorkersTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkersTable\");","map":{"version":3,"sources":["C:/Users/aditi/rocks-and-logs/src/Workers/WorkersTable.js"],"names":["React","useEffect","useState","useMemo","useTable","COLUMNS","axios","WorkersTable","workers","setWorkers","get","then","res","data","console","log","catch","err","columns","workersData","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AAEZK,IAAAA,KAAK,CAACI,GAAN,CAAU,8BAAV,EACKC,IADL,CACUC,GAAG,IAAI;AAACH,MAAAA,UAAU,CAACG,GAAG,CAACC,IAAL,CAAV;AAAsBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AAAsB,KAD9D,EAEKG,KAFL,CAEWC,GAAG,IAAI;AAACH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AAAiB,KAFpC;AAIH,GANQ,EAMN,EANM,CAAT;AASA,QAAMC,OAAO,GAAGf,OAAO,CAAC,MAAME,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMc,WAAW,GAAGhB,OAAO,CAAC,MAAMK,OAAP,EAAgB,CAACA,OAAD,CAAhB,CAA3B;AAGA,QAAMY,aAAa,GAAGhB,QAAQ,CAAC;AAC3Bc,IAAAA,OAD2B;AAE3BC,IAAAA;AAF2B,GAAD,CAA9B;AAMA,QAAM;AACFE,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMFL,aANJ;AAUA,sBACI,sBAAWC,aAAa,EAAxB;AAAA,4BACI;AAAA,gBACKE,YAAY,CAACG,GAAb,CAAiBC,WAAW,iBACzB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC3B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,0BAAmCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI,sBAAWV,iBAAiB,EAA5B;AAAA,gBACKE,IAAI,CAACE,GAAL,CAASO,GAAG,IAAI;AACbR,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,4BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACKD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAcU,IAAI,IAAI;AACnB,gCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,8BAA+BD,IAAI,CAACJ,MAAL,CAAY,MAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OAVA;AADL;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CA8BI;AA9BJ;AAgCH;;GAlEQzB,Y;UAkBiBH,Q;;;KAlBjBG,Y;AAoET,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { useTable } from 'react-table';\r\nimport { COLUMNS } from './WorkersColumn';\r\nimport axios from 'axios';\r\n\r\nfunction WorkersTable() {\r\n\r\n    const [workers, setWorkers] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        axios.get(\"http://localhost:5000/users/\")\r\n            .then(res => {setWorkers(res.data); console.log(res.data)})\r\n            .catch(err => {console.log(err)})\r\n            \r\n    }, [])\r\n\r\n    \r\n    const columns = useMemo(() => COLUMNS, []);\r\n    const workersData = useMemo(() => workers, [workers]);\r\n\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        workersData \r\n    });\r\n\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = tableInstance;\r\n\r\n\r\n\r\n    return (\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}> {column.render('Header')} </th>\r\n                        ))}\r\n                        \r\n                    </tr>\r\n                ))}\r\n                \r\n            </thead>\r\n\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map(row => {\r\n                    prepareRow(row);\r\n                    return(\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\r\n                            })}\r\n                            \r\n                        </tr>\r\n                    )\r\n                })}\r\n                \r\n            </tbody>\r\n        </table>\r\n\r\n        //<div></div>\r\n    )\r\n}\r\n\r\nexport default WorkersTable\r\n"]},"metadata":{},"sourceType":"module"}